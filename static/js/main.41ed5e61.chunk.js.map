{"version":3,"sources":["Components/5lesson/JuniorPlus.module.css","Components/ThingsToDo.module.css","Components/Hello.module.css","Components/5lesson/Navbar.module.css","Components/Common/EditableSpan.module.css","assets/images/loader.svg","Components/10task/toggle.module.css","Components/Hello.tsx","Components/ThingsToDo.tsx","Components/InputNyaNew.tsx","Components/ButtonNyaNew .tsx","Components/ControlledInputSpanEmptyArrayMy.tsx","Components/Common/EditableSpan.tsx","Components/6-7lesson/NewLocalStorage.ts","Components/8lesson/homeWorkReducer.ts","Components/Common/Range.tsx","Components/10task/unknownReducer.ts","Components/5lesson/Junior.tsx","Components/Common/Select.tsx","Components/Common/Radio.tsx","Components/5lesson/PreJunior.tsx","Components/5lesson/Navbar.tsx","Components/10task/Toggle.tsx","Components/12task/themeReducer.ts","Components/12task/LocalStorageForJuniorPlus.ts","Components/12task/juniorPlusWithRedux.tsx","App.tsx","redux/redux-store.tsx","index.tsx"],"names":["module","exports","Hello","props","className","classes","container","messageblue","messagecontent","name","surname","messagetimestampleft","src","ThingItem","id","n","p","ThingsToDo","things","example","map","thing","todolist","key","firstBtn","onClick","removeExample","all","todolist2","btnAll","changeFilter","InputNyaNew","onKeyPressProps","error","restProps","s","inputNya","onKeyPress","e","charCode","type","ButtonNyaNew","buttonNya","nameOfBtn","onCLickMethod","value","alert","ControlledInputSpanEmptyArrayMy","useState","arr","setArr","onClickMethod1","newObj","v1","setTitle","arrNames","filteredNames","filter","t","removeTask","onChange","event","currentTarget","EditableSpan","editMode","setEditMode","setValue","autoFocus","onBlur","onDoubleClick","spann","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","hwReducer","action","stateCopy","payload","sort","a","b","localeCompare","reverse","el","age","Error","sortedUpDownArrayAC","useStyles","makeStyles","root","width","input","console","log","Range","React","memo","Typography","gutterBottom","Grid","spacing","alignItems","item","ArrowForward","xs","Slider","aria-labelledby","max","maxValue","min","minValue","Input","margin","handleInputChange","handleBlur","inputProps","step","initialState","loading","loadingReducer","Junior","title","newlistOfPeople","setExample","setFilter","filterValue","useReducer","listOfPeople","dispatch","datePopUp","moment","format","date","Date","setDate","timerId","setTimerId","valueSlifer","setValueSlider","handleSliderChange","useCallback","newValue","target","Number","message","filtredExample","stateFromLocalStorage","Tooltip","aria-label","style","fontSize","toLocaleTimeString","clearInterval","timer_id","setInterval","setTimeout","setLoadingFalse","Select","setColor","items","label","Radio","itemRadio","checked","setRadioCurrentValue","PreJunior","currentValue","setItemRadio","newItem","Navbar","dropdown","dropdowncontent","to","Toggle","preLoader","toggle","setColorAC","themeReducer","JuniorPlusWithRedux","useDispatch","useSelector","theme","useEffect","stateFromLocalStorage1","restoreState1","saveState1","green","purple","white","dark","greenBTN","purpleBTN","whiteBTN","darkBTN","App","path","render","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,OAAS,2BAA2B,MAAQ,0BAA0B,KAAO,yBAAyB,SAAW,6BAA6B,UAAY,8BAA8B,SAAW,6BAA6B,QAAU,8B,mBCA9RD,EAAOC,QAAU,CAAC,SAAW,6BAA6B,SAAW,6BAA6B,OAAS,6B,mBCA3GD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,YAAc,2BAA2B,eAAiB,8BAA8B,sBAAwB,qCAAqC,qBAAuB,sC,wCCAnOD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,SAAW,yBAAyB,gBAAkB,gCAAgC,MAAQ,wB,mBCAlLD,EAAOC,QAAU,CAAC,MAAQ,8B,mBCD1BD,EAAOC,QAAU,IAA0B,oC,mBCC3CD,EAAOC,QAAU,CAAC,OAAS,yB,qKCqCZC,MA1Bf,SAAeC,GACX,OAEI,6BACI,yBAAKC,UAAWC,IAAQC,WACpB,yBAAKF,UAAWC,IAAQE,aACpB,wBAAIH,UAAWC,IAAQG,gBAAiBL,EAAMM,KAA9C,IAAqDN,EAAMO,SAE3D,yMACA,yBAAKN,UAAWC,IAAQM,sBAAxB,WAMR,yBAAKC,IAAI,uF,iBCZfC,EAAY,SAACV,GACf,OACI,6BACI,uBAAGW,GAAIX,EAAMW,IAAb,IAAmBX,EAAMY,EAAzB,IAA6BZ,EAAMa,KAwDhCC,EAjDI,SAACd,GAChB,IAAIe,EAASf,EAAMgB,QAAQC,KAAI,SAACC,GAE5B,OAAO,4BACP,wBAAIjB,UAAWC,IAAQiB,UAAU,kBAAC,EAAD,CAAWR,GAAIO,EAAMP,GAAIS,IAAKF,EAAME,IAAKR,EAAGM,EAAMN,IACnF,4BAAQX,UAAWC,IAAQmB,SAAUC,QAAS,WAC9CtB,EAAMuB,cAAcL,EAAMP,MAD1B,UAMJ,OACI,yBAAKV,UAAWC,IAAQsB,KACpB,0BAAMvB,UAAWC,IAAQuB,WAAYV,GACrC,yBAAKd,UAAWC,IAAQwB,QACzB,4BAAQJ,QAAS,WAAKtB,EAAM2B,aAAa,SAAzC,OAEC,4BAAQL,QAAS,WACbtB,EAAM2B,aAAa,WADvB,SAGA,4BAAQL,QAAS,WACbtB,EAAM2B,aAAa,YADvB,UAGA,4BAAQL,QAAS,WACbtB,EAAM2B,aAAa,SADvB,U,yCCjBGC,MAtBf,SAAqB5B,GAA2B,IACrC6B,EAAwC7B,EAAxC6B,gBAAiBC,EAAuB9B,EAAvB8B,MAAUC,EADS,YACI/B,EADJ,6BAY3C,OACI,oCACI,yCAAOC,UAAW+B,IAAEC,SAAUC,WAXrB,SAACC,GAEK,KAAfA,EAAEC,UAEFP,MAO0DE,EAA1D,CACOM,KAAMN,EAAUM,KAAON,EAAUM,KAAO,UAC9CP,EAAQ,8BAAOA,GAAgB,OCd7BQ,MALf,SAAuBtC,GAEnB,OAAO,0CAAQC,UAAW+B,IAAEO,WAAevC,GAApC,IAA6CA,EAAMwC,YCmF9D,IAAIC,EAAgB,SAACC,GACjBC,MAAM,SAAWD,IAINE,EA5Ef,SAAyC5C,GAAiC,IAAD,EACjD6C,mBAA8C,IADG,mBAChEC,EADgE,KAC3DC,EAD2D,KAcjEC,EAAiB,WACjB,GAAmB,IAAfhD,EAAM0C,MAAa,CACnBD,EAAczC,EAAM0C,OACpB,IAAMO,EAAS,CACXtC,GAAIuC,eACJ5C,KAAMN,EAAM0C,OAEhBK,EAAO,GAAD,mBAAKD,GAAL,CAAUG,KAChBjD,EAAMmD,SAAS,SAEfR,MAAM,6BAIVS,EAAWN,EAAI7B,KAAI,SAACX,GACpB,OAAO,yBAAKc,IAAKd,EAAKK,IAClB,2BAAIL,EAAKA,MACT,4BAAQgB,QAAS,YA5BzB,SAAoBX,GAChB,IAAI0C,EAAgBP,EAAIQ,QAAO,SAAAC,GAAC,OAAIA,EAAE5C,IAAMA,KAC5CoC,EAAOM,GA2BCG,CAAWlD,EAAKK,MADpB,cAgBR,OAEI,6BACI,6BAGI,kBAAC,EAAD,CACI0B,KAAK,OACLP,MAAO,QACP2B,SA/CD,SAACC,GAEZ1D,EAAMmD,SAASO,EAAMC,cAAcjB,QA8CvBA,MAAO1C,EAAM0C,MACbb,gBAjBQ,WACpBmB,OAmBQ,kBAAC,EAAD,CAAc1B,QAAS0B,EAAgBR,UAAW,QAElD,8BAAOY,M,iBCtCRQ,MAhCf,SAAsB5D,GAA0B,IAAD,EACb6C,oBAAkB,GADL,mBACtCgB,EADsC,KAC5BC,EAD4B,KAiB3C,OACID,EACM,2BAEEJ,SAnBQ,SAACtB,GACjBnC,EAAM+D,SAAS5B,EAAEwB,cAAcjB,QAmBvBsB,WAAW,EACXC,OAbZ,WACIH,GAAY,GACZ9D,EAAM+D,SAAS/D,EAAM0C,UAcjB,0BAAMwB,cApBd,WACIJ,GAAY,IAmBgC7D,UAAWC,IAAQiE,OACtDnE,EAAM0C,MAAQ1C,EAAM0C,MAAQ,oBCtCtC,SAAS0B,EAAahD,EAAaiD,GACtC,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,aAAaC,QAAQtD,EAAKkD,GAIvB,SAASK,EAAgBvD,EAAawD,GAEzC,IAAMN,EAAgBG,aAAaI,QAAQzD,GAE3C,OADsB,OAAlBkD,IAAwBM,EAAeL,KAAKO,MAAMR,IAC/CM,EASXR,EAAqB,OAAQ,CAACW,EAAG,IAAKC,EAAG,IAGhBL,EAAwB,OAAQ,CAACI,EAAG,GAAIC,EAAG,IAApE,ICIaC,EAAY,SAACZ,EAAyBa,GAC/C,IAAIC,EAAS,YAAOd,GACpB,OAAQa,EAAO7C,MACX,IAAK,uBAED,MAAsB,MAAlB6C,EAAOE,QACPD,EAAYA,EAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEhF,KAAKkF,cAAcD,EAAEjF,SAEnC,QAAlB4E,EAAOE,QACdD,EAAYA,EAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEhF,KAAKkF,cAAcD,EAAEjF,SAAOmF,UAGhEN,EAGX,IAAK,mBAED,OADAA,EAAYA,EAAU7B,QAAQ,SAAAoC,GAAE,OAAIA,EAAGC,IAAMT,EAAOE,WAIxD,QACI,MAAM,IAAIQ,MAAM,0CAMfC,EAAsB,SAACT,GAChC,MAAO,CAAC/C,KAAM,uBAAwB+C,QAASA,I,gFC9C7CU,EAAYC,YAAW,CACzBC,KAAM,CACFC,MAAO,KAEXC,MAAO,CACHD,MAAO,MAGfE,QAAQC,IAAI,SAWL,IAAMC,EAAMC,IAAMC,MAAK,SAACvG,GAE3B,IAAME,EAAU4F,IAEhB,OACI,yBAAK7F,UAAWC,EAAQ8F,MACpB,kBAACQ,EAAA,EAAD,CAAY7F,GAAG,eAAe8F,cAAY,GAA1C,UAGA,kBAACC,EAAA,EAAD,CAAMvG,WAAS,EAACwG,QAAS,EAAGC,WAAW,UACnC,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACC,EAAA,EAAD,OAEJ,kBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,GACT,kBAACC,EAAA,EAAD,CACItE,MAA8B,kBAAhB1C,EAAM0C,MAAqB1C,EAAM0C,MAAQ,EACvDe,SAAUzD,EAAMyD,SAChBwD,kBAAgB,eAChBC,IAAKlH,EAAMmH,SACXC,IAAKpH,EAAMqH,YAGnB,kBAACX,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACS,EAAA,EAAD,CACIrH,UAAWC,EAAQgG,MACnBxD,MAAO1C,EAAM0C,MACb6E,OAAO,QACP9D,SAAUzD,EAAMwH,kBAChBvD,OAAQjE,EAAMyH,WACdC,WAAY,CACRC,KAAM,GACNP,IAAK,EACLF,IAAK,IACL7E,KAAM,SACN,kBAAmB,wB,QCtD3CuF,EAAe,CACfC,SAAS,GAkBN,IAmCQC,EAlDf,WAAsG,IAA9EzD,EAA6E,uDAAnDuD,EAAc1C,EAAqC,uCACjG,OAAQA,EAAO7C,MACX,IAfmB,cAiBnB,IAhBwB,mBAmBxB,IAlByB,oBAmBrB,OAAO,2BAAIgC,GAAX,IAAiBwD,QAAS3C,EAAO2C,UACrC,QAEI,OAAOxD,ICkKJ0D,EA3KAzB,IAAMC,MAAK,SAACvG,GACvBmG,QAAQC,IAAI,8CAD0B,MAEdvD,mBAAiB,IAFH,mBAEjCH,EAFiC,KAE1BqB,EAF0B,OAGdlB,mBAAiB,IAHH,mBAGjCmF,EAHiC,KAG1B7E,EAH0B,OAIMN,qBAJN,mBAIjCoF,EAJiC,aAKVpF,mBAAS,CACjC,CAAClC,GAAI,EAAGS,IAAK,GAAIR,EAAG,OAAQC,EAAG,SAC/B,CAACF,GAAI,EAAGS,IAAK,GAAIR,EAAG,QAASC,EAAG,UAChC,CAACF,GAAI,EAAGS,IAAK,GAAIR,EAAG,QAASC,EAAG,OAChC,CAACF,GAAI,EAAGS,IAAK,GAAIR,EAAG,QAASC,EAAG,SAChC,CAACF,GAAI,EAAGS,IAAK,GAAIR,EAAG,OAAQC,EAAG,UAVG,mBAKjCG,EALiC,KAKxBkH,EALwB,OAYZrF,mBAA0B,OAZd,mBAYjCS,EAZiC,KAYzB6E,EAZyB,KAwBtC,IAAIC,EAAcpH,EACH,UAAXsC,IACA8E,EAAcpH,EAAQsC,QAAO,SAACpC,GAAD,MAAuB,UAAZA,EAAML,MAEnC,WAAXyC,IACA8E,EAAcpH,EAAQsC,QAAO,SAACpC,GAAD,MAAuB,WAAZA,EAAML,MAEnC,QAAXyC,IACA8E,EAAcpH,EAAQsC,QAAO,SAACpC,GAAD,MAAuB,QAAZA,EAAML,MAhCZ,MA6CPwH,qBAAWpD,EAAW,CACjD,CAACtE,GAAI,IAAKL,KAAM,SAAUqF,IAAK,IAC/B,CAAChF,GAAI,IAAKL,KAAM,SAAUqF,IAAK,IAC/B,CAAChF,GAAI,IAAKL,KAAM,UAAWqF,IAAK,IAChC,CAAChF,GAAI,IAAKL,KAAM,UAAWqF,IAAK,IAChC,CAAChF,GAAI,IAAKL,KAAM,UAAWqF,IAAK,MAlDE,mBA6CjC2C,EA7CiC,KA6CnBC,EA7CmB,KAiElCC,EAAYC,MAASC,OAAO,cAjEM,EAkEhB7F,mBAAyB,CAC3C8F,KAAM,IAAIC,OAnEwB,mBAkEjCD,EAlEiC,KAkE3BE,EAlE2B,OAqEVhG,qBArEU,mBAqEjCiG,EArEiC,KAqExBC,EArEwB,OA8FAlG,mBAA0B,IA9F1B,mBA8F/BmG,EA9F+B,KA8FlBC,EA9FkB,OA+FNpG,mBAAS,IA/FH,mBA+F/BwE,GA/F+B,cAgGNxE,mBAAS,KAhGH,qBAgG/BsE,GAhG+B,MAkGhC+B,IAlGgC,MAkGXC,uBAAY,SAACzF,EAAY0F,GAChDH,EAAeG,KAChB,KAEG5B,GAAoB2B,uBAAY,SAACzF,GACnC1D,EAAMiJ,eAAsC,KAAvBvF,EAAM2F,OAAO3G,MAAe,GAAK4G,OAAO5F,EAAM2F,OAAO3G,UAC3E,IAEG+E,GAAa0B,uBAAY,WACvBnJ,EAAM0C,MAAQ,EACd1C,EAAMiJ,eAAe,GACdjJ,EAAM0C,MAAQ,KACrB1C,EAAMiJ,eAAe,OAE1B,IAGH,OAAO,6BAEH,4BAAKjJ,EAAMuJ,SACX,kBAAC,EAAD,CAAOjJ,KAAK,SAASC,QAAQ,eAC7B,6BACI,kBAAC,EAAD,CACIS,QAASoH,EACT7G,cA3GZ,SAAuBZ,GACnB,IAAI6I,EAAiBxI,EAAQsC,QAAO,SAACC,GAAD,OAAOA,EAAE5C,KAAOA,KACpDuH,EAAWsB,IA0GH7H,aAvGZ,SAAsBe,GAClByF,EAAUzF,OAyGV,6BAEI,kBAAC,EAAD,CAAiCA,MAAOsF,EAAO7E,SAAUA,IACzD,kBAAC,EAAD,CAAcT,MAAOA,EAAOqB,SAAUA,IAEtC,6BACI,4BAAQzC,QAlGD,WACf8C,EAAU,cAAe1B,KAiGjB,QACA,4BAAQpB,QA/FpB,WACI,IAAImI,EAAwB9E,EAAa,cAAejC,GACxDqB,EAAS0F,KA6FD,aAMR,6BAAK,sCACD,8BAAOnB,EAAarH,KAAI,SAAAyE,GAAE,OACtB,yBAAKtE,IAAKsE,EAAG/E,IAAK+E,EAAGpF,KAArB,IAA4BoF,EAAGC,IAA/B,YAEJ,6BAAMsC,GACN,6BACA,4BAAQ3G,QA7FgB,WAC5BiH,EHTG,CAAClG,KAAM,mBAAoB+C,QGSJ,OA4FtB,qBACA,4BAAQ9D,QA3FM,WAClBiH,EAAS1C,EAAoB,SA0FzB,WACA,4BAAQvE,QAzFQ,WACpBiH,EAAS1C,EAAoB,WAwFzB,cAIJ,sCAEA,kBAAC6D,EAAA,EAAD,CAAS1B,MAAOQ,EAAWmB,aAAYnB,EAAWoB,MAAO,CAACC,SAAU,SAChE,kDAAwBlB,EAAKA,KAAKmB,uBAEtC,6BACA,4BAAQxI,QAvFC,WACTwH,GAAWiB,cAAcjB,GACzB,IAAIkB,EAAWC,aAAY,WACvBpB,EAAQ,CAACF,KAAM,IAAIC,SACpB,KACHG,EAAWiB,KAkFX,eACA,4BAAQ1I,QAjFW,WACnBwH,GAAWiB,cAAcjB,KAgFzB,iBAEA,uCACA,4BAAQxH,QA9EQ,WAChBtB,EAAMuI,SDnE+D,CACzElG,KAhC4B,mBAgCJwF,SCkEU,IAC9B1B,QAAQC,IAAIpG,EAAM6H,SAClBqC,YAAW,WACPlK,EAAMuI,SDlEa,SAACV,GAAD,MAAgD,CAC3ExF,KAnC6B,oBAmCJwF,QAASA,GCiEXsC,EAAgB,MAChC,OAyEH,QAEA,uCAEA,kBAAC9D,EAAD,CAAO3D,MAAOsG,EAAa7B,SAAUA,GAAU1D,SAAUyF,GAAoB7B,SAAUA,GAChFG,kBAAmBA,GAAmBC,WAAYA,SCrIlD2C,MA/Bf,SAAgBpK,GAAqB,IAAD,EAGM6C,mBAAiB,IAHvB,mBAShC,OATgC,UASxB,6BAEA,4BACIH,MAAO1C,EAAM0C,MACbe,SAAUzD,EAAMqK,UAGfrK,EAAMsK,MAAMrJ,KAAI,SAAA4F,GAAI,OACjB,4BACIzF,IAAKyF,EAAKnE,MACVA,MAAOmE,EAAKnE,OAEXmE,EAAK0D,aCHfC,MArBf,SAAexK,GAEX,OACI,6BAEKA,EAAMyK,UAAUxJ,KAAI,SAAAyE,GACjB,OAAO,2BAAOtE,IAAKsE,EAAG/E,IAClB,2BAAO+J,QAAShF,EAAGgF,QACZjH,SAAU,kBAAMzD,EAAM2K,qBAAqBjF,EAAGpF,OAC9C+B,KAAK,UAAUqD,EAAGpF,WC6B9BsK,MA/Cf,SAAmB5K,GAAa,IAAD,EAEH6C,mBAAS,CAC7B,CAACH,MAAO,OAAQ6H,MAAO,QACvB,CAAC7H,MAAO,SAAU6H,MAAO,UACzB,CAAC7H,MAAO,MAAO6H,MAAO,OACtB,CAAC7H,MAAO,QAAS6H,MAAO,SACxB,CAAC7H,MAAO,SAAU6H,MAAO,YAPF,mBAEtBD,EAFsB,aAUazH,sBAVb,mBAUpBgI,EAVoB,aAYKhI,mBAAS,CACrC,CAAClC,GAAI,OAAQL,KAAM,OAAQoK,SAAS,GACpC,CAAC/J,GAAI,OAAQL,KAAM,YAAaoK,SAAS,GACzC,CAAC/J,GAAI,SAAUL,KAAM,UAAWoK,SAAS,GACzC,CAAC/J,GAAI,SAAUL,KAAM,WAAYoK,SAAS,MAhBnB,mBAYtBD,EAZsB,KAYXK,EAZW,KAoC3B,OAAQ,6BACA,4BAAK9K,EAAMuJ,SACX,kBAAC,EAAD,CAAQe,MAAOA,EAAO5H,MAAOmI,EACrBR,SAAU,eAGlB,kBAAC,EAAD,CAAOI,UAAWA,EAAWE,qBArBR,SAACrK,GAC1B,IAAMyK,EAAUN,EAAUxJ,KAAI,SAAA4F,GAC1B,OAAIA,EAAKvG,OAASA,EACP,2BAAIuG,GAAX,IAAiB6D,SAAS,IAEnB,2BAAI7D,GAAX,IAAiB6D,SAAS,OAGlCI,EAAaC,Q,gCCFNC,EA1BA,WAIX,OAAQ,6BAGJ,yBAAK/K,UAAWC,IAAQ+K,UACpB,4BAAQhL,UAAU,WAAlB,YACA,yBAAKA,UAAWC,IAAQgL,iBAEpB,kBAAC,IAAD,CAASC,GAAG,WAAZ,UAAsC,6BAGtC,kBAAC,IAAD,CAASA,GAAG,wBAAZ,uBAAgE,6BAGhE,kBAAC,IAAD,CAASA,GAAG,cAAZ,kB,iDCNDC,OAbf,WACI,OAAQ,6BAEH,yBAAK3K,IAAK4K,KAAWpL,UAAW2J,KAAM0B,SAEtC,gC,oBCQL1D,GAAgC,CAChC0C,MAAO,CACH,CAAC5H,MAAO,QAAS6H,MAAO,SACxB,CAAC7H,MAAO,OAAQ6H,MAAO,QACvB,CAAC7H,MAAO,QAAS6H,MAAO,SACxB,CAAC7H,MAAO,SAAU6H,MAAO,WAE7BM,aAAa,SAgBV,IAAMU,GAAa,SAACV,GAAD,MAAwC,CAC9DxI,KAtCqB,YAsCJwI,iBAiBNW,GA/Bf,WAAoG,IAA9EnH,EAA6E,uDAAnDuD,GAAc1C,EAAqC,uCAC/F,OAAQA,EAAO7C,MACX,IA1BiB,YA2Bb,OAAO,2BAAIgC,GAAX,IACIwG,aAAa3F,EAAO2F,eAG5B,QAEI,OAAO,eAAIxG,KClChB,SAASD,GAAahD,EAAaiD,GACtC,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,aAAaC,QAAQtD,EAAKkD,GAIvB,SAASK,GAAgBvD,EAAawD,GAEzC,IAAMN,EAAgBG,aAAaI,QAAQzD,GAE3C,OADsB,OAAlBkD,IAAwBM,EAAeL,KAAKO,MAAMR,IAC/CM,EASXR,GAAqB,OAAQ,CAACW,EAAG,IAAKC,EAAG,IAGhBL,GAAwB,OAAQ,CAACI,EAAG,GAAIC,EAAG,IAApE,ICTayG,GAAsB,WAC/BtF,QAAQC,IAAI,iBACZ,IAAMmC,EAAWmD,eACXpB,EAAQqB,cAA4C,SAAAtH,GAAK,OAAIA,EAAMuH,MAAMtB,SACzEO,EAAec,cAAkC,SAAAtH,GAAK,OAAIA,EAAMuH,MAAMf,gBAC5EgB,qBAAU,YAgBV,WACI,IAAIC,EAAyBnH,GAAa,eAAgBkG,GAE1DtC,EAASgD,GAAWO,IAjBpBC,KACD,IAQH,IAAMC,EAAa,WACf5H,GAAU,eAAgByG,IAY9B,OAAQ,6BAGJ,wBAAI5K,UAA2B,SAAhB4K,EAA0B3K,KAAQ+L,MAC7B,WAAjBpB,EAA4B3K,KAAQgM,OACnB,UAAjBrB,EAA2B3K,KAAQiM,MAClB,SAAjBtB,EAA0B3K,KAAQkM,KAAO,IAH5C,QAIA,yDAEA,kBAAC,EAAD,CAAQ9B,MAAOA,EACP5H,MAAOmI,EACPR,SA9BZ,SAAkBlI,GACdoG,EAASgD,GAAWpJ,EAAEwB,cAAcjB,QACpCsJ,OA8BA,4BAAQ/L,UAA2B,SAAhB4K,EAA0B3K,KAAQmM,SACjC,WAAjBxB,EAA4B3K,KAAQoM,UACnB,UAAjBzB,EAA2B3K,KAAQqM,SAClB,SAAjB1B,EAA0B3K,KAAQsM,QAAU,GAAIlL,QAAS,WAAK0K,MAHjE,gBCCOS,GA9BH,WACR,IAAM5E,EAAU8D,cAAY,SAACtH,GAAD,OAAyBA,EAAMwD,QAAQA,WAC7DU,EAAWmD,eAGjB,OAEI,kBAAC,IAAD,KACI,6BACK7D,EAAU,6BAAK,kBAAC,GAAD,OACZ,oCACI,kBAAC,IAAD,CAAO6E,KAAM,uBAAwBC,OAAQ,kBAAM,kBAAC,GAAD,SACnD,kBAAC,IAAD,CAAOD,KAAM,UAAWC,OAAQ,kBAAM,kBAAC,EAAD,CAAQpD,QAAS,SACT1B,QAASA,EACTU,SAAUA,OACxD,kBAAC,IAAD,CAAOmE,KAAM,aAAcC,OAAQ,kBAAM,kBAAC,EAAD,CAAWpD,QAAS,iBAE7D,kBAAC,EAAD,U,SCvCpBqD,GAAWC,aAAgB,CAC3BhF,QAASC,EACT8D,MAAMJ,KAQKsB,GAFHC,aAAYH,ICNxBI,IAASL,OACL,kBAAC,KAAD,CAAUG,MAAOA,IACjB,kBAAC,GAAD,OACaG,SAASC,eAAe,W","file":"static/js/main.41ed5e61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"green\":\"JuniorPlus_green__2IIIZ\",\"purple\":\"JuniorPlus_purple__1UO70\",\"white\":\"JuniorPlus_white__3Wfy4\",\"dark\":\"JuniorPlus_dark__3finb\",\"greenBTN\":\"JuniorPlus_greenBTN__2jjHN\",\"purpleBTN\":\"JuniorPlus_purpleBTN__3dulE\",\"whiteBTN\":\"JuniorPlus_whiteBTN__v8dYO\",\"darkBTN\":\"JuniorPlus_darkBTN__O9VnT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todolist\":\"ThingsToDo_todolist__OT9Bx\",\"firstBtn\":\"ThingsToDo_firstBtn__nbGq5\",\"btnAll\":\"ThingsToDo_btnAll__2v_hR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hello_container__3ySnt\",\"messageblue\":\"Hello_messageblue__OrbTv\",\"messagecontent\":\"Hello_messagecontent__cm_Bm\",\"messagetimestampright\":\"Hello_messagetimestampright__tZGlX\",\"messagetimestampleft\":\"Hello_messagetimestampleft__3kxbl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Navbar_active__DNdWc\",\"dropbtn\":\"Navbar_dropbtn__2gHIP\",\"dropdown\":\"Navbar_dropdown__1yt8-\",\"dropdowncontent\":\"Navbar_dropdowncontent__147ku\",\"green\":\"Navbar_green__34VDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spann\":\"EditableSpan_spann__3gj2P\"};","module.exports = __webpack_public_path__ + \"static/media/loader.79c69891.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle\":\"toggle_toggle__WkyQn\"};","import React from \"react\";\nimport classes from \"./Hello.module.css\";\n\n\n\n\n\ntype NameType = {\n    name: string\n    surname: string\n}\n\nfunction Hello(props: NameType) {\n    return (\n\n        <div>\n            <div className={classes.container}>\n                <div className={classes.messageblue}>\n                    <h4 className={classes.messagecontent}>{props.name} {props.surname}</h4>\n\n                    <p>How it it going? How it it going? How it it going? How it it going? How it it going? How it it going? How it it going? How it it going? How it it going? How it it going? </p>\n                    <div className={classes.messagetimestampleft}>17:15</div>\n\n\n                </div>\n\n            </div>\n            <img src=\"https://cdn.ananasposter.ru/image/cache/catalog/poster/film/99/1333-1000x830.jpg\"/>\n\n        </div>\n\n\n    )\n\n\n}\n\n\nexport default Hello;","import React from \"react\";\nimport {exampleType, filterValueType} from \"../App\";\nimport classes from \"./ThingsToDo.module.css\";\n\n\ntype ExamplePropsType = {\n\n}\n\ntype exapmleAllType = {\n\n    example: Array<exampleType>\n    removeExample:(id:number)=>void\n    changeFilter: (value:filterValueType) => void\n}\nconst ThingItem = (props: any) => {\n    return (\n        <div>\n            <p id={props.id}> {props.n} {props.p}</p>\n\n        </div>\n    )\n}\n\n\nconst ThingsToDo = (props: exapmleAllType) => {\n    let things = props.example.map((thing) => {\n\n        return <ul>\n        <li className={classes.todolist}><ThingItem id={thing.id} key={thing.key} n={thing.n}/>\n        <button className={classes.firstBtn} onClick={()=>{\n        props.removeExample(thing.id)}\n        }>x</button>\n        </li></ul>\n    });\n\n    return (\n        <div className={classes.all}>\n            <span className={classes.todolist2}>{things}</span>\n            <div className={classes.btnAll}>\n           <button onClick={()=>{props.changeFilter(\"all\")\n           }}>All</button>\n            <button onClick={()=>{\n                props.changeFilter(\"hight\")\n            }}>HIGHT</button>\n            <button onClick={()=>{\n                props.changeFilter(\"middle\")\n            }}>Middle</button>\n            <button onClick={()=>{\n                props.changeFilter(\"low\")\n            }}>Low</button>\n            </div>\n\n        </div>\n    );\n};\n\n\n// <li key={task.id}>\n//     <input type=\"checkbox\" checked={task.isDone} />\n//     <span>{task.title}</span>\n//     <button\n//         onClick={() => {\n//             props.removeTask(task.id);\n//         }}\n//     >\n//         Delete\n//     </button>\n// </li>\n\n\n\n\n\nexport default ThingsToDo\n\n\n","import React, {DetailedHTMLProps, InputHTMLAttributes, ChangeEvent} from \"react\"\nimport s from \"./Input.module.css\"\n\n\nexport type InputNyaPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n    & { onEnter?: () => void, error?: string, onChange: (event: ChangeEvent<HTMLInputElement>) => void, onKeyPressProps: () => void };\n\n//\n\nfunction InputNyaNew(props: InputNyaPropsType) {\n    const {onKeyPressProps, error, ...restProps} = props;\n\n    let onKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        // debugger;\n        if (e.charCode === 13) {\n            // debugger;\n            onKeyPressProps()\n        }\n\n    }\n\n    return (\n        <>\n            <input className={s.inputNya} onKeyPress={onKeyPress} {...restProps}\n                   type={restProps.type ? restProps.type : \"text\"}/>\n            {error ? <span>{error}</span> : null}\n        </>\n    );\n};\n\n\nexport default InputNyaNew","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\"\nimport s from \"./Input.module.css\"\n\nexport type ButtonNyaPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>,\nHTMLButtonElement> & { onEnter?: () => void, error?: string, onClick:()=>void, nameOfBtn:string };\n\nfunction ButtonNyaNew (props: ButtonNyaPropsType) {\n\n    return <button className={s.buttonNya} {...props}> {props.nameOfBtn}</button>\n}\n\nexport default ButtonNyaNew","import React, {ChangeEvent, useState, KeyboardEvent} from \"react\";\n\nimport {v1} from \"uuid\";\n\nimport InputNyaNew, {InputNyaPropsType} from \"./InputNyaNew\";\nimport ButtonNyaNew from \"./ButtonNyaNew \";\n\ntype inputSpanEmptyArrayType = {\n    value: string;\n    setTitle: (value: string) => void;\n};\n\n\n// - добавьте в проект с домашками: инпут, кнопку, спан и пустой массив\n// - сделайте инпут контролируемым: (useState, value, onChange)\n// - сделайте функцию, которая будет здороваться с именем, введённым в инпут (брать value из useState и выводить в алерт) и повесте её на <button> и добавьте в функцию для onKeyPress инпута\n// - улучшите функцию: если имя не пустое, то только тогда показывать алерт,\n// - а так же добавьте в массив объект с именем и ид используя uuid\n// - отобразите в спане количество объектов (имён)\n\nfunction ControlledInputSpanEmptyArrayMy(props: inputSpanEmptyArrayType) {\n    let [arr, setArr] = useState<Array<{ id: string; name: string }>>([]);\n\n    function removeTask(id: string) {\n        let filteredNames = arr.filter(t => t.id != id);\n        setArr(filteredNames);\n    }\n\n\n    let setTitle = (event: ChangeEvent<HTMLInputElement>) => {\n        // debugger\n        props.setTitle(event.currentTarget.value);\n    };\n\n    let onClickMethod1 = () => {\n        if (props.value != \"\") {\n            onCLickMethod(props.value);\n            const newObj = {\n                id: v1(),\n                name: props.value,\n            };\n            setArr([...arr, newObj]);\n            props.setTitle(\"\");\n        } else {\n            alert(\"Please fill in the input\");\n        }\n    };\n\n    let arrNames = arr.map((name) => {\n        return <div key={name.id}>\n            <p>{name.name}</p>\n            <button onClick={() => {\n                removeTask(name.id)\n            }\n            }>Remove\n            </button>\n        </div>;\n    });\n\n\n\n    const onKeyPressProps = () => {\n        onClickMethod1();\n}\n\n\n\n    return (\n\n        <div>\n            <div>\n\n\n                <InputNyaNew\n                    type=\"text\"\n                    error={'error'}\n                    onChange={setTitle}\n                    value={props.value}\n                    onKeyPressProps={onKeyPressProps}\n                />\n\n                <ButtonNyaNew onClick={onClickMethod1} nameOfBtn={\"add\"}/>\n\n                <span>{arrNames}</span>\n            </div>\n\n        </div>\n\n    );\n}\n\nlet onCLickMethod = (value: string) => {\n    alert(\"Hello \" + value);\n};\n\n\nexport default ControlledInputSpanEmptyArrayMy;\n","import React, {ChangeEvent, useState} from \"react\";\nimport classes from \"./EditableSpan.module.css\";\n\n\n\ntype EditableSpanType = {\n    value: string,\n    setValue: any\n    // saveState:<T>(key: string, state: T)=>void\n    // restoreState:<T>(key: string, defaultState: T)=>void\n    // saveInfo: Function\n}\n\nfunction EditableSpan(props: EditableSpanType) {\n    let [editMode, setEditMode] = useState<boolean>(false)\n    const changeValue = (e: ChangeEvent<HTMLInputElement>) => {\n        props.setValue(e.currentTarget.value)\n    }\n\n    function activatedEditMode() {\n        setEditMode(true)\n    }\n\n    function disActivatedEditMode() {\n        setEditMode(false)\n        props.setValue(props.value)\n\n    }\n\n\n    return (\n        editMode\n            ? <input\n                // value={props.value}\n                onChange={changeValue}\n                autoFocus={true}\n                onBlur={disActivatedEditMode}\n            />\n            :\n            <span onDoubleClick={activatedEditMode} className={classes.spann}>\n                {props.value ? props.value : \"Please add smth\"}\n            </span>\n    )\n}\n\nexport default EditableSpan\n\n\n","// !!! это отдельная таска, и НЕ нужно её делать внутри EditableSpan!!!\n// * вот вам функция для сохранения объектов в память браузера (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {//****************почему тут Т,я могу заменить его на string?\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// * и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// * использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n// сохраняем объект типа StateType в ячейке \"test\"\n\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\n// * добавьте на страницу Junior в компоненте для демонстрации EditableSpan 2 кнопки: одна должна сохранять значение EditableSpan в браузере, другая восстанавливать значение из браузера\n\n","export type stateType = {\n    id: string\n    name: string\n    age: number\n}\n\ntype sortedArrayUpDownACtype = {\n    type: 'SORTED-UP-DOWN-ARRAY'\n    payload: string\n}\n\ntype sortedAgeArrayACtype = {\n    type: 'SORTED-AGE-ARRAY'\n    payload: number\n}\n\n\ntype actionType = sortedArrayUpDownACtype | sortedAgeArrayACtype\n\n// let initialState:Array<stateType> = [\n//     {id: \"1\", name: \"Albert\", age: 40},\n//     {id: \"2\", name: \"George\", age: 30},\n//     {id: \"3\", name: \"Francia\", age: 20},\n//     {id: \"4\", name: \"Richard\", age: 25},\n//     {id: \"5\", name: \"Orlando\", age: 32},\n// ]\n\n\nexport const hwReducer = (state: Array<stateType>, action: actionType): Array<stateType> => {\n    let stateCopy = [...state]\n    switch (action.type) {\n        case 'SORTED-UP-DOWN-ARRAY':\n\n            if (action.payload == \"up\") {\n                stateCopy = stateCopy.sort((a, b) => a.name.localeCompare(b.name))\n                return stateCopy\n            } else if (action.payload == \"down\") {\n                stateCopy = stateCopy.sort((a, b) => a.name.localeCompare(b.name)).reverse()\n                return stateCopy\n            }\n            return stateCopy\n\n\n        case \"SORTED-AGE-ARRAY\":\n            stateCopy = stateCopy.filter((el => el.age > action.payload))\n            return stateCopy\n\n\n        default:\n            throw new Error(\"I do not undarstand this action type\")\n\n    }\n};\n\n\nexport const sortedUpDownArrayAC = (payload: 'up' | 'down'): sortedArrayUpDownACtype => {\n    return {type: 'SORTED-UP-DOWN-ARRAY', payload: payload}\n}\nexport const sortedAgeArrayAC = (payload: number): sortedAgeArrayACtype => {\n    return {type: 'SORTED-AGE-ARRAY', payload: payload}\n}\n","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport { ArrowForward} from \"@material-ui/icons\";\n\n\nconst useStyles = makeStyles({\n    root: {\n        width: 250,\n    },\n    input: {\n        width: 42,\n    },\n});\nconsole.log('RANGE')\ntype sliderType ={\n    value:number|string,\n    minValue:number\n    maxValue:number\n    onChange:(event:any, newValue:any)=>void\n    handleInputChange:(event:any)=>void\n    handleBlur:()=>void\n\n}\n\nexport const Range=React.memo((props:sliderType)=>{\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography id=\"input-slider\" gutterBottom>\n                Slider\n            </Typography>\n            <Grid container spacing={2} alignItems=\"center\">\n                <Grid item>\n                    <ArrowForward />\n                </Grid>\n                <Grid item xs>\n                    <Slider\n                        value={typeof props.value === 'number' ? props.value : 0}\n                        onChange={props.onChange}\n                        aria-labelledby=\"input-slider\"\n                        max={props.maxValue}\n                        min={props.minValue}\n                    />\n                </Grid>\n                <Grid item>\n                    <Input\n                        className={classes.input}\n                        value={props.value}\n                        margin=\"dense\"\n                        onChange={props.handleInputChange}\n                        onBlur={props.handleBlur}\n                        inputProps={{\n                            step: 10,\n                            min: 0,\n                            max: 100,\n                            type: 'number',\n                            'aria-labelledby': 'input-slider',\n                        }}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n})\n\n\n// - сделайте и добавьте в папку common универсальную компоненту <Range/> (ползунок, например для изменения громкости) с красивыми стилями\n// - компонента должна принимать minValue, maxValue, value и onChange\n// - используйте React.memo и useCallback\n","export const SET_LOADING = \"SET_LOADING\"\nexport const SET_LOADING_TRUE = \"SET_LOADING_TRUE\"\nexport const SET_LOADING_FALSE = \"SET_LOADING_FALSE\"\n\n\ntype initialStateType = {\n    loading: boolean\n}\n\nlet initialState = {\n    loading: false\n}\n\nfunction loadingReducer(state: initialStateType = initialState, action: allACTypes):initialStateType {\n    switch (action.type) {\n        case SET_LOADING:\n            return {...state, loading: action.loading}\n        case SET_LOADING_TRUE:\n            return {...state, loading: action.loading}\n\n        case SET_LOADING_FALSE:\n            return {...state,loading: action.loading}\n        default:\n\n            return state\n    }\n}\n\nexport const setLoading = (loading: boolean): loadingReducerType => ({\n    type: SET_LOADING, loading: loading,\n})\n\nexport const setLoadingTrue = (loading: boolean): loadingReducerTrueType => ({\n    type: SET_LOADING_TRUE, loading: loading,\n})\n\nexport const setLoadingFalse = (loading: boolean): loadingReducerFalseType => ({\n    type: SET_LOADING_FALSE, loading: loading,\n})\n\n\ntype allACTypes = loadingReducerType | loadingReducerTrueType | loadingReducerFalseType\n\n\ntype loadingReducerType = {\n    type: typeof SET_LOADING\n    loading: boolean\n\n}\n\ntype loadingReducerTrueType = {\n    type: typeof SET_LOADING_TRUE\n    loading: boolean\n\n}\n\ntype loadingReducerFalseType = {\n    type: typeof SET_LOADING_FALSE\n    loading: boolean\n\n}\n\n\nexport default loadingReducer","import React, {useCallback, useReducer, useState} from \"react\";\nimport Hello from \"../Hello\";\nimport ThingsToDo from \"../ThingsToDo\";\nimport {filterValueType} from \"../../App\";\nimport ControlledInputSpanEmptyArrayMy from \"../ControlledInputSpanEmptyArrayMy\";\nimport EditableSpan from \"../Common/EditableSpan\";\nimport {restoreState, saveState} from \"../6-7lesson/NewLocalStorage\";\nimport {hwReducer, sortedAgeArrayAC, sortedUpDownArrayAC, stateType} from \"../8lesson/homeWorkReducer\";\nimport moment from \"moment\";\nimport {Tooltip} from \"@material-ui/core\";\nimport {Range} from \"./../Common/Range\"\n\nimport {SET_LOADING_FALSE, SET_LOADING_TRUE, setLoadingFalse, setLoadingTrue} from \"../10task/unknownReducer\";\n\n\nconst Junior = React.memo((props: any) => {\n    console.log('джуниор')\n    let [value, setValue] = useState<string>(\"\")\n    let [title, setTitle] = useState<string>(\"\");\n    let [newlistOfPeople, setNewlistOfPeople] = useState()\n    let [example, setExample] = useState([\n        {id: 1, key: 55, n: \"Work\", p: \"Hight\"},\n        {id: 2, key: 55, n: \"Chill\", p: \"Middle\"},\n        {id: 3, key: 55, n: \"Games\", p: \"Low\"},\n        {id: 4, key: 55, n: \"React\", p: \"Hight\"},\n        {id: 5, key: 55, n: \"HTML\", p: \"low\"},\n    ]);\n    let [filter, setFilter] = useState<filterValueType>(\"all\");\n\n\n    function removeExample(id: number) {\n        let filtredExample = example.filter((t) => t.id !== id);\n        setExample(filtredExample);\n    }\n\n    function changeFilter(value: filterValueType) {\n        setFilter(value);\n    }\n\n    let filterValue = example;\n    if (filter === \"hight\") {\n        filterValue = example.filter((thing) => thing.p === \"Hight\");\n    }\n    if (filter === \"middle\") {\n        filterValue = example.filter((thing) => thing.p === \"Middle\");\n    }\n    if (filter === \"low\") {\n        filterValue = example.filter((thing) => thing.p === \"Low\");\n    }\n    const saveState1 = () => {\n        saveState('local title', value)\n    }\n\n    function restoreState1() {\n        let stateFromLocalStorage = restoreState(\"local title\", value);\n        setValue(stateFromLocalStorage)\n    }\n\n//////////////******************8task************///////////////\n\n    let [listOfPeople, dispatch] = useReducer(hwReducer, [\n        {id: \"1\", name: \"Albert\", age: 40},\n        {id: \"2\", name: \"George\", age: 17},\n        {id: \"3\", name: \"Francia\", age: 15},\n        {id: \"4\", name: \"Richard\", age: 25},\n        {id: \"5\", name: \"Orlando\", age: 32},\n    ])\n    const onCLickSortAllow18Years = () => {\n        dispatch(sortedAgeArrayAC(18))\n    }\n    const onCLickSortUp = () => {\n        dispatch(sortedUpDownArrayAC(\"up\"))\n    }\n    const onClickSortDown = () => {\n        dispatch(sortedUpDownArrayAC(\"down\"))\n    }\n\n\n    //////////////******************9task************///////////////\n\n    let datePopUp = moment().format(\"DD-MM-YYYY\")\n    let [date, setDate] = useState<{ date: Date }>({\n        date: new Date()\n    })\n    let [timerId, setTimerId] = useState<NodeJS.Timeout>()\n    let callMe = () => {\n        timerId && clearInterval(timerId)\n        let timer_id = setInterval(() => {\n            setDate({date: new Date()})\n        }, 1000)\n        setTimerId(timer_id);\n    }\n    let callMeStopToStop = () => {\n        timerId && clearInterval(timerId)\n    }\n\n    //////////////******************10task************///////////////\n\n    const OnclickTrue = () => {\n        props.dispatch(setLoadingTrue(true))\n        console.log(props.loading)\n        setTimeout(() => {\n            props.dispatch(setLoadingFalse(false))\n        }, 2000)\n    }\n    const onCLickFalse = () => {\n        props.dispatch({type: SET_LOADING_FALSE})\n    }\n    ////////************RANGE 11 task*************//////////\n    const [valueSlifer, setValueSlider] = useState<number | string>(30);\n    const [minValue, setMinValue] = useState(10)\n    const [maxValue, setMaxValue] = useState(85)\n\n    const handleSliderChange = useCallback((event: any, newValue: any) => {\n        setValueSlider(newValue);\n    }, []);\n\n    const handleInputChange = useCallback((event: any) => {\n        props.setValueSlider(event.target.value === '' ? '' : Number(event.target.value));\n    }, []);\n\n    const handleBlur = useCallback(() => {\n        if (props.value < 0) {\n            props.setValueSlider(0);\n        } else if (props.value > 100) {\n            props.setValueSlider(100);\n        }\n    }, []);\n\n\n    return <div>\n\n        <h1>{props.message}</h1>\n        <Hello name=\"Artemy\" surname=\"Andruschak\"/>\n        <div>\n            <ThingsToDo\n                example={filterValue}\n                removeExample={removeExample}\n                changeFilter={changeFilter}\n            />\n        </div>\n        <div>\n            {/*<ControlledInputSpanEmptyArray value={title} setTitle={setTitle} />*/}\n            <ControlledInputSpanEmptyArrayMy value={title} setTitle={setTitle}/>\n            <EditableSpan value={value} setValue={setValue}/>\n            {/*<EditableSpan value={value} setValue={setValue}/>*/}\n            <div>\n                <button onClick={saveState1}>SAVE</button>\n                <button onClick={restoreState1}>RESTORE</button>\n            </div>\n            {/*<UnControlledInputSpanEmptyArray />*/}\n\n        </div>\n\n        <div><h2>TASK 8</h2>\n            <span>{listOfPeople.map(el =>\n                <div key={el.id}>{el.name} {el.age} Age</div>\n            )}</span>\n            <div>{newlistOfPeople}</div>\n            <br></br>\n            <button onClick={onCLickSortAllow18Years}>SORT Who older 18</button>\n            <button onClick={onCLickSortUp}>SORT UP</button>\n            <button onClick={onClickSortDown}>SORT DOWN</button>\n\n\n        </div>\n        <h2>TASK 9</h2>\n\n        <Tooltip title={datePopUp} aria-label={datePopUp} style={{fontSize: \"25px\"}}>\n            <span>Current time is: {date.date.toLocaleTimeString()}</span>\n        </Tooltip>\n        <br></br>\n        <button onClick={callMe}>setInterval</button>\n        <button onClick={callMeStopToStop}>clearInterval</button>\n\n        <h2>TASK 10</h2>\n        <button onClick={OnclickTrue}>TRUE</button>\n\n        <h1>TASK 11</h1>\n\n        <Range value={valueSlifer} maxValue={maxValue} onChange={handleSliderChange} minValue={minValue}\n               handleInputChange={handleInputChange} handleBlur={handleBlur}/>\n\n    </div>\n})\n\nexport default Junior;\n\n","import React, {ChangeEvent, useState, FormEvent} from \"react\";\n\ntype listType = {\n    value: string,\n    label: string\n\n\n}\ntype listAllType = {\n    items: Array<listType>\nvalue: string\n    // setCurrentValue: (value: string) => void\n    setColor:any\n}\n\n\n\nfunction Select(props: listAllType) {\n\n\n    let [currentValue, setCurrentValue] = useState<string>(\"\");\n    const onChangeFunct = (e: ChangeEvent<HTMLSelectElement>) => {\n       setCurrentValue(e.currentTarget.value)\n    }\n\n\n    return (<div>\n\n            <select\n                value={props.value}\n                onChange={props.setColor}\n\n            >\n                {props.items.map(item => (\n                    <option\n                        key={item.value}\n                        value={item.value}\n                    >\n                        {item.label}\n                    </option>\n                ))}\n            </select>\n\n\n        </div>\n    )\n}\n\nexport default Select;\n\n\n\n\n// import React, {ChangeEvent, useState} from 'react';\n// import {action} from '@storybook/addon-actions';\n//\n// import {SelectMy, valueType} from \"./SelectMy\";\n//\n//\n// export default {\n//     title: 'Select stories',\n//     component: SelectMy,\n// };\n//\n// export const SelectEmpty = () => <SelectMy value={1} onChange={() => {\n// }}/>;\n// export const ChangeSelect = () => {\n//     let [valueNext, setValueNext] = useState<Array<valueType>>([\n//         {value: 1, title: \"Moscow\"},\n//         {value: 2, title: \"Minsk\"},\n//         {value: 3, title: \"Archangelsk\"},\n//         {value: 4, title: \"New York\"},\n//         {value: 5, title: \"Vancouver\"},\n//     ])\n//     let [newValue, setNewValue] = useState()\n//\n//     const onChange = (e: ChangeEvent<HTMLSelectElement>) => {\n//         setNewValue(e.currentTarget.value)\n//     }\n//     return <SelectMy value={newValue} onChange={onChange}/>;\n// }","import React, {ChangeEvent, FormEvent} from \"react\";\n\ntype radioType = {\n    id: string\n    name: string\n    checked: boolean\n}\ntype allRadioType = {\n    itemRadio: Array<radioType>\n    setRadioCurrentValue: (name: string) => void\n\n}\n\n\nfunction Radio(props: allRadioType) {\n\n    return (\n        <div>\n\n            {props.itemRadio.map(el => {\n                return <label key={el.id}>\n                    <input checked={el.checked}\n                           onChange={() => props.setRadioCurrentValue(el.name)}\n                           type=\"radio\"/>{el.name}\n                </label>\n            })}\n\n        </div>\n\n    )\n\n\n}\n\n\nexport default Radio","import React, {useState} from \"react\";\nimport Select from \"../Common/Select\";\nimport Radio from \"../Common/Radio\";\n\n\nfunction PreJunior(props: any) {\n\n    let [items, setItems] = useState([\n        {value: \"Milk\", label: 'Milk'},\n        {value: \"Coffee\", label: 'Coffee'},\n        {value: \"Tea\", label: 'Tea'},\n        {value: \"Juice\", label: 'Juice'},\n        {value: \"Apples\", label: 'Apples'}\n    ])\n\n    const [currentValue, setCurrentValue] = useState();\n\n    let [itemRadio, setItemRadio] = useState([\n        {id: \"male\", name: \"John\", checked: false},\n        {id: \"male\", name: \"Bendjamin\", checked: false},\n        {id: \"female\", name: \"Volerma\", checked: true},\n        {id: \"female\", name: \"Insignia\", checked: false},\n\n    ])\n\n\n    const functionRadioChecked = (name: string) => {\n        const newItem = itemRadio.map(item => {\n            if (item.name === name) {\n                return {...item, checked: true}\n            } else {\n                return {...item, checked: false}\n            }\n        })\n        setItemRadio(newItem);\n    }\n\n\n\n\n\n    return (<div>\n            <h1>{props.message}</h1>\n            <Select items={items} value={currentValue}\n                    setColor={()=>{}}\n                    // setCurrentValue={setCurrentValue}\n            />\n            <Radio itemRadio={itemRadio} setRadioCurrentValue={functionRadioChecked}/>\n        </div>\n    )\n}\n\nexport default PreJunior;\n\n\n//\n// import React, {useState} from \"react\";\n// import Select from \"../6-7lesson/Common/Select\";\n// import {v1} from \"uuid\";\n// import Radio from \"../6-7lesson/Common/Radio\";\n//\n//\n//\n// function PreJunior(props: any) {\n//\n//     let [items, setItems] = useState([\n//         {value: \"Milk\", label: 'Milk'},\n//         {value: \"Coffee\", label: 'Coffee'},\n//         {value: \"Tea\", label: 'Tea'},\n//         {value: \"Juice\", label: 'Juice'},\n//         {value: \"Apples\", label: 'Apples'}\n//     ])\n//\n//     const [currentValue, setCurrentValue] = useState();\n//\n//     let [itemRadio, setItemRadio]= useState([\n//         {value:\"male\", name:\"John\", checked:false},\n//         {value:\"male\", name:\"Bendjamin\",checked:false},\n//         {value:\"female\", name:\"Volerma\",checked:true},\n//         {value:\"female\", name:\"Insignia\",checked:false},\n//\n//     ])\n//     // let [radioCurrentValue, setRadioCurrentValue] = useState<boolean>()\n//\n//     const functionRadioChecked =(name: string)=>{\n//         const newItem = itemRadio.map(item => {\n//             if(item.name === name) {\n//                 return {...item, checked: true}\n//             } else {\n//                 return {...item, checked: false}\n//             }\n//         })\n//         setItemRadio(newItem);\n//     }\n//\n//\n//     console.log(currentValue)\n//\n//\n//\n//\n//     return (<div>\n//             <h1>{props.message}</h1>\n//             <Select items={items} value={currentValue} setCurrentValue={setCurrentValue} />\n//             <Radio itemRadio={itemRadio} setRadioCurrentValue={functionRadioChecked} />\n//         </div>\n//     )\n// }\n//\n// export default PreJunior;\n","import React from \"react\";\nimport classes from \"./Navbar.module.css\"\nimport {NavLink} from \"react-router-dom\";\n\n\n\nconst Navbar = () => {\n    // const bestFriends = store._state.dialogsPage.dialogs.map(friend => {\n    //     return <div>{friend.name}</div> ;\n    // })\n    return (<div>\n\n\n        <nav className={classes.dropdown}>\n            <button className=\"dropbtn\">Dropdown</button>\n            <div className={classes.dropdowncontent}>\n\n                <NavLink to=\"/junior\">Junior</NavLink><br></br>\n\n\n                <NavLink to=\"/juniorPlusWithRedux\">juniorPlusWithRedux</NavLink><br></br>\n\n\n                <NavLink to=\"/preJunior\">Pre Junior</NavLink>\n            </div>\n\n\n        </nav>\n        </div>\n    );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport preLoader from \"../../assets/images/loader.svg\";\nimport style from \"./toggle.module.css\"\n\nfunction Toggle() {\n    return (<div>\n\n         <img src={preLoader} className={style.toggle}/>\n\n         <div>\n\n         </div>\n\n    </div>)\n}\n\n\nexport default Toggle","import {useState} from \"react\";\n\n\nexport const SET_COLOR = \"SET_COLOR\"\n// export const SET_LOADING_TRUE = \"SET_LOADING_TRUE\"\n// export const SET_LOADING_FALSE = \"SET_LOADING_FALSE\"\n\nexport type itemsType = {\n    value: string\n    label: string\n}\n\ntype initialStateType ={\n    items:Array<itemsType>,\n    currentValue:string\n}\n\nlet initialState:initialStateType = {\n    items: [\n        {value: \"white\", label: 'white'},\n        {value: \"dark\", label: 'dark'},\n        {value: \"green\", label: 'green'},\n        {value: \"purple\", label: 'purple'},\n    ],\n    currentValue:\"white\"\n}\n\nfunction themeReducer(state: initialStateType = initialState, action: allACTypes):initialStateType {\n    switch (action.type) {\n        case SET_COLOR:\n            return {...state,\n                currentValue:action.currentValue\n            }\n\n        default:\n\n            return {...state}\n    }\n}\n\nexport const setColorAC = (currentValue:string): setColorType => ({\n    type: SET_COLOR, currentValue\n})\n\n\n\ntype allACTypes = setColorType\n\n\ntype setColorType = {\n    type: typeof SET_COLOR\n    currentValue:string\n\n\n\n}\n\n\nexport default themeReducer","// !!! это отдельная таска, и НЕ нужно её делать внутри EditableSpan!!!\n// * вот вам функция для сохранения объектов в память браузера (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {//****************почему тут Т,я могу заменить его на string?\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// * и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// * использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n// сохраняем объект типа StateType в ячейке \"test\"\n\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\n// * добавьте на страницу Junior в компоненте для демонстрации EditableSpan 2 кнопки: одна должна сохранять значение EditableSpan в браузере, другая восстанавливать значение из браузера\n\n","import React, {ChangeEvent, useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {AppStateType} from \"../../redux/redux-store\";\nimport classes from \"../5lesson/JuniorPlus.module.css\";\nimport Select from \"../Common/Select\";\nimport {setColorAC} from \"./themeReducer\";\nimport {restoreState, saveState} from \"./LocalStorageForJuniorPlus\";\n\n\ntype itemsType = {\n    value: string\n    label: string\n}\n\n\nexport const JuniorPlusWithRedux = () => {\n    console.log(\"app is called\")\n    const dispatch = useDispatch();\n    const items = useSelector<AppStateType, Array<itemsType>>(state => state.theme.items)\n    const currentValue = useSelector<AppStateType, string>(state => state.theme.currentValue)\n    useEffect(() => {\n\n        restoreState1()\n    }, [])\n\n    function setColor(e: ChangeEvent<HTMLSelectElement>) {\n        dispatch(setColorAC(e.currentTarget.value))\n        saveState1()\n    }\n\n    ///////////*********LOCAL STARAGE***********/////////////\n    const saveState1 = () => {\n        saveState('currentValue', currentValue)\n        // saveState('startValue', startValue)\n    }\n\n    function restoreState1() {\n        let stateFromLocalStorage1 = restoreState(\"currentValue\", currentValue);\n        // let stateFromLocalStorage2 = restoreState(\"startValue\", startValue);\n        dispatch(setColorAC(stateFromLocalStorage1))\n        // dispatch(setStartValueAC(stateFromLocalStorage2))\n    }\n\n\n    return (<div>\n\n\n        <h1 className={currentValue == \"green\" ? classes.green : \"\"\n        || currentValue === \"purple\" ? classes.purple : \"\"\n        || currentValue === \"white\" ? classes.white : \"\"\n        || currentValue === \"dark\" ? classes.dark : \"\"}>1111</h1>\n        <h4>Please choose theme color</h4>\n\n        <Select items={items}\n                value={currentValue}\n                setColor={setColor}\n        />\n        <button className={currentValue == \"green\" ? classes.greenBTN : \"\"\n        || currentValue === \"purple\" ? classes.purpleBTN : \"\"\n        || currentValue === \"white\" ? classes.whiteBTN : \"\"\n        || currentValue === \"dark\" ? classes.darkBTN : \"\"} onClick={()=>{saveState1()}}>SAVE COLOR</button>\n\n    </div>)\n}\n\n\n\n\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Junior from \"./Components/5lesson/Junior\";\n\nimport PreJunior from \"./Components/5lesson/PreJunior\";\nimport {Link, Router, BrowserRouter, Route, HashRouter} from \"react-router-dom\";\nimport Navbar from \"./Components/5lesson/Navbar\";\nimport store, {AppStateType} from \"./redux/redux-store\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport Toggle from \"./Components/10task/Toggle\";\nimport preLoader from \"./assets/images/loader.svg\";\nimport {SET_LOADING, SET_LOADING_FALSE, SET_LOADING_TRUE} from \"./Components/10task/unknownReducer\";\nimport {Simulate} from \"react-dom/test-utils\";\nimport {JuniorPlusWithRedux} from \"./Components/12task/juniorPlusWithRedux\";\n\n\nexport type exampleType = {\n    id: number;\n    key: number;\n    n: string;\n    p: string;\n};\n\n\nexport type filterValueType = \"all\" | \"hight\" | \"middle\" | \"low\";\n\nconst App = () => {\n    const loading = useSelector((state: AppStateType) => state.loading.loading)\n    const dispatch = useDispatch()\n\n\n    return (\n\n        <HashRouter>\n            <div>\n                {loading ? <div><Toggle/></div> :\n                    <>\n                        <Route path={\"/juniorPlusWithRedux\"} render={() => <JuniorPlusWithRedux/>}/>\n                        <Route path={\"/junior\"} render={() => <Junior message={\"Junior\"}\n                                                                      loading={loading}\n                                                                      dispatch={dispatch}/>}/>\n                        <Route path={\"/preJunior\"} render={() => <PreJunior message={\"PreJunior\"}/>}/>\n                        {/*<div><img src={preLoader}/></div>*/}\n                        <Navbar/>\n\n                    </>\n                }\n            </div>\n\n\n        </HashRouter>\n    );\n\n};\n\n\nexport default App;\n","import { createStore, combineReducers } from \"redux\";\nimport loadingReducer from \"../Components/10task/unknownReducer\";\nimport themeReducer from \"../Components/12task/themeReducer\";\n\n\n\nlet reducers = combineReducers({\n    loading: loadingReducer,\n    theme:themeReducer\n\n})\n\nexport type AppStateType = ReturnType<typeof reducers>\n\nlet store = createStore(reducers)\n\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\nimport {HashRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}